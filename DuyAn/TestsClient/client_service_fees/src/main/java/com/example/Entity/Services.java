package com.example.Entity;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Services generated by hbm2java
 */
@Entity
@Table(name = "DuyAn_Services")
public class Services implements java.io.Serializable {

	private String serviceCode;
	private String parentServiceCode;
	private String serviceName;
	private Set<ServicesOnProjects> servicesOnProjectses = new HashSet<ServicesOnProjects>(0);

	public Services() {
	}

	public Services(String serviceCode, String parentServiceCode, String serviceName) {
		this.serviceCode = serviceCode;
		this.parentServiceCode = parentServiceCode;
		this.serviceName = serviceName;
	}

	public Services(String serviceCode, String parentServiceCode, String serviceName,
			Set<ServicesOnProjects> servicesOnProjectses) {
		this.serviceCode = serviceCode;
		this.parentServiceCode = parentServiceCode;
		this.serviceName = serviceName;
		this.servicesOnProjectses = servicesOnProjectses;
	}

	@Id

	@Column(name = "service_code", unique = true, nullable = false, length = 50)
	public String getServiceCode() {
		return this.serviceCode;
	}

	public void setServiceCode(String serviceCode) {
		this.serviceCode = serviceCode;
	}

	@Column(name = "parent_service_code", nullable = false, length = 50)
	public String getParentServiceCode() {
		return this.parentServiceCode;
	}

	public void setParentServiceCode(String parentServiceCode) {
		this.parentServiceCode = parentServiceCode;
	}

	@Column(name = "service_name", nullable = false, length = 50)
	public String getServiceName() {
		return this.serviceName;
	}

	public void setServiceName(String serviceName) {
		this.serviceName = serviceName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "services")
	public Set<ServicesOnProjects> getServicesOnProjectses() {
		return this.servicesOnProjectses;
	}

	public void setServicesOnProjectses(Set<ServicesOnProjects> servicesOnProjectses) {
		this.servicesOnProjectses = servicesOnProjectses;
	}

}
